openapi: 3.0.3
info:
  title: AI Detector API
  description: |
    Comprehensive AI-generated text detection system with RESTful API, Chrome extension integration, 
    and high-throughput data processing capabilities.
    
    ## Features
    - Multiple detection methods (Pattern, ML, LLM, Ensemble)
    - Batch processing with >1000 tweets/min throughput
    - Real-time detection with Chrome extension
    - Comprehensive error handling and monitoring
    - Rate limiting and caching
    
    ## Authentication
    - API Key authentication via `X-API-Key` header
    - Bearer token authentication via `Authorization` header
    
    ## Rate Limits
    - 100 requests per minute per IP (default)
    - 1000 requests per minute per API key
    - Custom limits available for enterprise
  version: 1.3.0
  termsOfService: https://github.com/kevinnbass/ai_detector/blob/main/TERMS.md
  contact:
    name: AI Detector Support
    url: https://github.com/kevinnbass/ai_detector/issues
    email: support@ai-detector.com
  license:
    name: MIT
    url: https://github.com/kevinnbass/ai_detector/blob/main/LICENSE

servers:
  - url: http://localhost:8000/api
    description: Local development server
  - url: https://api.ai-detector.com/v1
    description: Production server
  - url: https://staging-api.ai-detector.com/v1
    description: Staging server

paths:
  /detect:
    post:
      summary: Detect AI-generated text
      description: |
        Analyze a single text input to determine if it was generated by AI.
        Supports multiple detection methods and returns detailed confidence metrics.
      operationId: detectText
      tags:
        - Detection
      security:
        - ApiKeyAuth: []
        - BearerAuth: []
        - {}
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DetectionRequest'
            examples:
              basic_detection:
                summary: Basic text detection
                value:
                  text: "Furthermore, this comprehensive analysis demonstrates the multifaceted paradigm."
                  options:
                    detection_method: "ensemble"
                    confidence_threshold: 0.7
              advanced_detection:
                summary: Advanced detection with features
                value:
                  text: "This is a comprehensive analysis of the contemporary paradigm shift."
                  request_id: "analysis_001"
                  options:
                    detection_method: "ensemble"
                    confidence_threshold: 0.8
                    return_features: true
                    language: "en"
                  metadata:
                    source: "academic_paper"
                    user_id: "researcher_123"
      responses:
        '200':
          description: Detection completed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetectionResponse'
              examples:
                ai_detected:
                  summary: AI-generated text detected
                  value:
                    request_id: "req_123456789"
                    is_ai_generated: true
                    confidence_score: 0.87
                    detection_method: "ensemble"
                    processing_time_ms: 234.5
                    metadata:
                      text_length: 142
                      word_count: 15
                      detected_patterns: ["furthermore", "comprehensive", "multifaceted", "paradigm"]
                      language: "en"
                    timestamp: "2025-01-15T14:30:45.123Z"
                human_detected:
                  summary: Human-written text detected
                  value:
                    request_id: "req_123456790"
                    is_ai_generated: false
                    confidence_score: 0.23
                    detection_method: "ensemble"
                    processing_time_ms: 189.3
                    metadata:
                      text_length: 67
                      word_count: 12
                      detected_patterns: []
                      language: "en"
                    timestamp: "2025-01-15T14:30:45.123Z"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/RateLimited'
        '500':
          $ref: '#/components/responses/InternalError'

  /detect/batch:
    post:
      summary: Batch detect AI-generated text
      description: |
        Analyze multiple text inputs simultaneously with optimized parallel processing.
        Supports up to 100 texts per request with high-throughput processing.
      operationId: detectBatch
      tags:
        - Detection
      security:
        - ApiKeyAuth: []
        - BearerAuth: []
        - {}
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchDetectionRequest'
            examples:
              social_media_batch:
                summary: Social media posts batch
                value:
                  texts:
                    - id: "tweet_1"
                      text: "OMG just had the best coffee ever! â˜• #MondayMotivation"
                    - id: "tweet_2"
                      text: "This comprehensive analysis elucidates the multifaceted paradigm."
                  options:
                    detection_method: "ensemble"
                    parallel_processing: true
      responses:
        '200':
          description: Batch detection completed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchDetectionResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/RateLimited'
        '500':
          $ref: '#/components/responses/InternalError'

  /detect/{request_id}:
    get:
      summary: Get detection result by ID
      description: Retrieve cached results for a previous detection request.
      operationId: getDetectionResult
      tags:
        - Detection
      security:
        - ApiKeyAuth: []
        - BearerAuth: []
        - {}
      parameters:
        - name: request_id
          in: path
          required: true
          description: Unique request identifier
          schema:
            type: string
            pattern: '^[a-zA-Z0-9_-]+$'
            example: "req_123456789"
      responses:
        '200':
          description: Detection result found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetectionResponse'
        '404':
          description: Request ID not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '410':
          description: Result expired from cache
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /detect/history:
    get:
      summary: Get detection history
      description: Retrieve paginated list of recent detection requests.
      operationId: getDetectionHistory
      tags:
        - Detection
      security:
        - ApiKeyAuth: []
        - BearerAuth: []
      parameters:
        - name: page
          in: query
          description: Page number
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: limit
          in: query
          description: Results per page
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
        - name: user_id
          in: query
          description: Filter by user ID
          schema:
            type: string
        - name: start_date
          in: query
          description: Start date (ISO 8601)
          schema:
            type: string
            format: date-time
        - name: end_date
          in: query
          description: End date (ISO 8601)
          schema:
            type: string
            format: date-time
        - name: ai_only
          in: query
          description: Only AI detections
          schema:
            type: boolean
        - name: min_confidence
          in: query
          description: Minimum confidence score
          schema:
            type: number
            minimum: 0
            maximum: 1
      responses:
        '200':
          description: History retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HistoryResponse'

  /health:
    get:
      summary: Health check
      description: Check overall system health and availability.
      operationId: getHealth
      tags:
        - System
      responses:
        '200':
          description: System is healthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'
        '503':
          description: System is unhealthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'

  /status:
    get:
      summary: Detailed system status
      description: Get comprehensive system status and metrics.
      operationId: getStatus
      tags:
        - System
      security:
        - ApiKeyAuth: []
        - BearerAuth: []
      responses:
        '200':
          description: Status retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'

  /stats:
    get:
      summary: Usage statistics
      description: Get comprehensive usage statistics and analytics.
      operationId: getStats
      tags:
        - System
      security:
        - ApiKeyAuth: []
        - BearerAuth: []
      parameters:
        - name: period
          in: query
          description: Time period for statistics
          schema:
            type: string
            enum: [hour, day, week, month]
            default: day
        - name: start_date
          in: query
          description: Start date (ISO 8601)
          schema:
            type: string
            format: date-time
        - name: end_date
          in: query
          description: End date (ISO 8601)
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Statistics retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatsResponse'

  /config:
    get:
      summary: Get configuration
      description: Retrieve current API configuration.
      operationId: getConfig
      tags:
        - Configuration
      security:
        - ApiKeyAuth: []
        - BearerAuth: []
      responses:
        '200':
          description: Configuration retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigResponse'
    
    put:
      summary: Update configuration
      description: Update API configuration (admin authentication required).
      operationId: updateConfig
      tags:
        - Configuration
      security:
        - ApiKeyAuth: []
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigUpdateRequest'
      responses:
        '200':
          description: Configuration updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigResponse'
        '403':
          $ref: '#/components/responses/Forbidden'

  /metrics:
    get:
      summary: Prometheus metrics
      description: Prometheus-compatible metrics endpoint for monitoring.
      operationId: getMetrics
      tags:
        - System
      responses:
        '200':
          description: Metrics in Prometheus format
          content:
            text/plain:
              schema:
                type: string
              example: |
                # HELP api_requests_total Total number of API requests
                # TYPE api_requests_total counter
                api_requests_total{method="POST",endpoint="/detect"} 10543
                
                # HELP api_request_duration_seconds Request duration
                # TYPE api_request_duration_seconds histogram
                api_request_duration_seconds_bucket{le="0.1"} 8234

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
      description: API key for authentication
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT token for authentication

  schemas:
    DetectionRequest:
      type: object
      required:
        - text
      properties:
        text:
          type: string
          minLength: 1
          maxLength: 50000
          description: Text to analyze for AI generation
          example: "Furthermore, this comprehensive analysis demonstrates the multifaceted paradigm."
        request_id:
          type: string
          pattern: '^[a-zA-Z0-9_-]+$'
          description: Optional unique identifier for tracking
          example: "analysis_001"
        options:
          $ref: '#/components/schemas/DetectionOptions'
        metadata:
          type: object
          additionalProperties: true
          description: Optional metadata for the request
          properties:
            source:
              type: string
              example: "academic_paper"
            user_id:
              type: string
              example: "researcher_123"
            timestamp:
              type: string
              format: date-time
            custom_fields:
              type: object
              additionalProperties: true

    DetectionOptions:
      type: object
      properties:
        detection_method:
          type: string
          enum: [pattern, ml, llm, ensemble]
          default: ensemble
          description: Detection method to use
        confidence_threshold:
          type: number
          minimum: 0
          maximum: 1
          default: 0.7
          description: Minimum confidence threshold for AI detection
        return_features:
          type: boolean
          default: false
          description: Include detailed feature analysis in response
        language:
          type: string
          pattern: '^[a-z]{2}$'
          default: auto
          description: Language code (ISO 639-1)
          example: "en"
        timeout:
          type: number
          minimum: 1
          maximum: 30
          description: Request timeout in seconds

    DetectionResponse:
      type: object
      required:
        - request_id
        - is_ai_generated
        - confidence_score
        - detection_method
        - processing_time_ms
        - timestamp
      properties:
        request_id:
          type: string
          description: Unique request identifier
          example: "req_123456789"
        is_ai_generated:
          type: boolean
          description: Whether the text is AI-generated
          example: true
        confidence_score:
          type: number
          minimum: 0
          maximum: 1
          description: Confidence score (0-1)
          example: 0.87
        detection_method:
          type: string
          description: Method used for detection
          example: "ensemble"
        processing_time_ms:
          type: number
          description: Processing time in milliseconds
          example: 234.5
        metadata:
          $ref: '#/components/schemas/DetectionMetadata'
        features:
          $ref: '#/components/schemas/DetectionFeatures'
        timestamp:
          type: string
          format: date-time
          description: Response timestamp
          example: "2025-01-15T14:30:45.123Z"

    DetectionMetadata:
      type: object
      properties:
        text_length:
          type: integer
          description: Length of analyzed text
          example: 142
        word_count:
          type: integer
          description: Number of words in text
          example: 15
        detected_patterns:
          type: array
          items:
            type: string
          description: Detected AI patterns
          example: ["furthermore", "comprehensive", "multifaceted"]
        language:
          type: string
          description: Detected language
          example: "en"
        complexity_score:
          type: number
          minimum: 0
          maximum: 1
          description: Text complexity score
          example: 0.73

    DetectionFeatures:
      type: object
      properties:
        pattern_features:
          $ref: '#/components/schemas/PatternFeatures'
        ml_features:
          $ref: '#/components/schemas/MLFeatures'
        llm_features:
          $ref: '#/components/schemas/LLMFeatures'

    PatternFeatures:
      type: object
      properties:
        formal_word_count:
          type: integer
          example: 4
        transition_phrases:
          type: integer
          example: 1
        academic_indicators:
          type: integer
          example: 3
        repetitive_structures:
          type: integer
          example: 0
        avg_sentence_length:
          type: number
          example: 15.0

    MLFeatures:
      type: object
      properties:
        feature_vector:
          type: array
          items:
            type: number
          example: [0.23, 0.67, 0.89, 0.45, 0.12]
        model_version:
          type: string
          example: "v2.1.0"
        prediction_confidence:
          type: number
          example: 0.82
        feature_importance:
          type: object
          additionalProperties:
            type: number

    LLMFeatures:
      type: object
      properties:
        model_used:
          type: string
          example: "gpt-4-turbo"
        reasoning:
          type: string
          example: "High presence of academic jargon typical of AI generation"
        alternative_confidence:
          type: number
          example: 0.91
        context_analysis:
          type: string
          example: "Academic writing style with elevated vocabulary"

    BatchDetectionRequest:
      type: object
      required:
        - texts
      properties:
        texts:
          type: array
          minItems: 1
          maxItems: 100
          items:
            $ref: '#/components/schemas/TextInput'
        options:
          allOf:
            - $ref: '#/components/schemas/DetectionOptions'
            - type: object
              properties:
                parallel_processing:
                  type: boolean
                  default: true
                  description: Enable parallel processing
                max_concurrency:
                  type: integer
                  minimum: 1
                  maximum: 20
                  default: 10
                  description: Maximum concurrent processes
        metadata:
          type: object
          properties:
            batch_source:
              type: string
            user_id:
              type: string
            priority:
              type: string
              enum: [low, normal, high]

    TextInput:
      type: object
      required:
        - id
        - text
      properties:
        id:
          type: string
          description: Unique identifier within batch
          example: "tweet_1"
        text:
          type: string
          minLength: 1
          maxLength: 50000
          description: Text to analyze
          example: "This is a sample text for analysis."
        metadata:
          type: object
          additionalProperties: true

    BatchDetectionResponse:
      type: object
      required:
        - batch_id
        - total_texts
        - results
        - timestamp
      properties:
        batch_id:
          type: string
          description: Unique batch identifier
          example: "batch_123456789"
        total_texts:
          type: integer
          description: Total number of texts processed
          example: 2
        successful_detections:
          type: integer
          description: Number of successful detections
          example: 2
        failed_detections:
          type: integer
          description: Number of failed detections
          example: 0
        processing_time_ms:
          type: number
          description: Total processing time
          example: 456.7
        results:
          type: array
          items:
            $ref: '#/components/schemas/BatchResult'
        statistics:
          $ref: '#/components/schemas/BatchStatistics'
        performance:
          $ref: '#/components/schemas/BatchPerformance'
        timestamp:
          type: string
          format: date-time

    BatchResult:
      type: object
      required:
        - id
        - is_ai_generated
        - confidence_score
      properties:
        id:
          type: string
          example: "tweet_1"
        is_ai_generated:
          type: boolean
          example: false
        confidence_score:
          type: number
          example: 0.23
        detection_method:
          type: string
          example: "ensemble"
        processing_time_ms:
          type: number
          example: 123.4
        error:
          $ref: '#/components/schemas/BatchError'

    BatchError:
      type: object
      properties:
        code:
          type: string
          example: "TEXT_TOO_LONG"
        message:
          type: string
          example: "Text exceeds maximum length"

    BatchStatistics:
      type: object
      properties:
        ai_detected:
          type: integer
          example: 1
        human_detected:
          type: integer
          example: 1
        average_confidence:
          type: number
          example: 0.585
        confidence_distribution:
          type: object
          properties:
            high:
              type: integer
              description: Confidence > 0.8
            medium:
              type: integer
              description: Confidence 0.5-0.8
            low:
              type: integer
              description: Confidence < 0.5

    BatchPerformance:
      type: object
      properties:
        texts_per_second:
          type: number
          example: 4.37
        cache_hit_rate:
          type: number
          example: 0.15
        average_text_processing_ms:
          type: number
          example: 228.35

    HistoryResponse:
      type: object
      properties:
        page:
          type: integer
          example: 1
        limit:
          type: integer
          example: 20
        total_results:
          type: integer
          example: 150
        total_pages:
          type: integer
          example: 8
        results:
          type: array
          items:
            $ref: '#/components/schemas/HistoryItem'

    HistoryItem:
      type: object
      properties:
        request_id:
          type: string
        is_ai_generated:
          type: boolean
        confidence_score:
          type: number
        text_length:
          type: integer
        detection_method:
          type: string
        processing_time_ms:
          type: number
        timestamp:
          type: string
          format: date-time
        metadata:
          type: object
          additionalProperties: true

    HealthResponse:
      type: object
      required:
        - status
        - version
      properties:
        status:
          type: string
          enum: [healthy, degraded, unhealthy]
          example: "healthy"
        version:
          type: string
          example: "1.3.0"
        uptime_seconds:
          type: integer
          example: 3600
        checks:
          type: object
          properties:
            database:
              type: string
              enum: [healthy, unhealthy]
            llm_service:
              type: string
              enum: [healthy, degraded, unhealthy]
            ml_models:
              type: string
              enum: [healthy, degraded, unhealthy]
            memory_usage:
              type: string
              enum: [normal, high, critical]
        performance:
          type: object
          properties:
            avg_response_time_ms:
              type: number
            requests_per_minute:
              type: number
            cache_hit_rate:
              type: number

    StatusResponse:
      type: object
      properties:
        system:
          type: object
          properties:
            version:
              type: string
            environment:
              type: string
              enum: [development, staging, production]
            uptime_seconds:
              type: integer
            memory_usage_mb:
              type: number
            cpu_usage_percent:
              type: number
        api:
          type: object
          properties:
            total_requests:
              type: integer
            requests_today:
              type: integer
            average_response_time_ms:
              type: number
            error_rate_percent:
              type: number
        detection:
          type: object
          properties:
            models_loaded:
              type: array
              items:
                type: string
            cache_size:
              type: integer
            queue_size:
              type: integer

    StatsResponse:
      type: object
      properties:
        period:
          type: object
          properties:
            start:
              type: string
              format: date-time
            end:
              type: string
              format: date-time
            duration_hours:
              type: number
        requests:
          type: object
          properties:
            total:
              type: integer
            successful:
              type: integer
            failed:
              type: integer
            rate_limited:
              type: integer
        detection:
          type: object
          properties:
            ai_detected:
              type: integer
            human_detected:
              type: integer
            ai_detection_rate:
              type: number
        performance:
          type: object
          properties:
            avg_response_time_ms:
              type: number
            p95_response_time_ms:
              type: number
            throughput_per_minute:
              type: number

    ConfigResponse:
      type: object
      properties:
        detection_methods:
          type: object
          properties:
            pattern:
              type: object
              properties:
                enabled:
                  type: boolean
                confidence_weight:
                  type: number
            ml:
              type: object
              properties:
                enabled:
                  type: boolean
                model_version:
                  type: string
                confidence_weight:
                  type: number
            llm:
              type: object
              properties:
                enabled:
                  type: boolean
                provider:
                  type: string
                model:
                  type: string
                confidence_weight:
                  type: number
        performance:
          type: object
          properties:
            max_text_length:
              type: integer
            max_batch_size:
              type: integer
            timeout_seconds:
              type: integer
        features:
          type: object
          properties:
            caching_enabled:
              type: boolean
            monitoring_enabled:
              type: boolean
            rate_limiting_enabled:
              type: boolean

    ConfigUpdateRequest:
      type: object
      properties:
        detection_methods:
          type: object
          properties:
            pattern:
              type: object
              properties:
                enabled:
                  type: boolean
                confidence_weight:
                  type: number
            ml:
              type: object
              properties:
                enabled:
                  type: boolean
                confidence_weight:
                  type: number
            llm:
              type: object
              properties:
                enabled:
                  type: boolean
                provider:
                  type: string
                model:
                  type: string
                confidence_weight:
                  type: number
        performance:
          type: object
          properties:
            max_text_length:
              type: integer
            timeout_seconds:
              type: integer
        features:
          type: object
          properties:
            caching_enabled:
              type: boolean
            rate_limiting_enabled:
              type: boolean

    ErrorResponse:
      type: object
      required:
        - error
      properties:
        error:
          type: object
          required:
            - code
            - message
          properties:
            code:
              type: string
              description: Error code
              example: "VALIDATION_ERROR"
            message:
              type: string
              description: Human-readable error message
              example: "Request validation failed"
            details:
              type: object
              description: Additional error details
              additionalProperties: true
            request_id:
              type: string
              description: Request ID for tracking
            timestamp:
              type: string
              format: date-time
              description: Error timestamp

  responses:
    BadRequest:
      description: Bad request - validation error or malformed request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            validation_error:
              summary: Validation error
              value:
                error:
                  code: "VALIDATION_ERROR"
                  message: "Request validation failed"
                  details:
                    field: "text"
                    issue: "Text must be between 1 and 50000 characters"
                  timestamp: "2025-01-15T14:30:45Z"
            text_too_long:
              summary: Text too long
              value:
                error:
                  code: "TEXT_TOO_LONG"
                  message: "Text exceeds maximum length of 50,000 characters"
                  details:
                    provided_length: 75000
                    max_length: 50000
                  timestamp: "2025-01-15T14:30:45Z"

    Unauthorized:
      description: Unauthorized - authentication required
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error:
              code: "UNAUTHORIZED"
              message: "Authentication required"
              timestamp: "2025-01-15T14:30:45Z"

    Forbidden:
      description: Forbidden - insufficient permissions
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error:
              code: "FORBIDDEN"
              message: "Insufficient permissions for this operation"
              timestamp: "2025-01-15T14:30:45Z"

    RateLimited:
      description: Too many requests - rate limit exceeded
      headers:
        X-RateLimit-Limit:
          description: Number of requests allowed per time window
          schema:
            type: integer
        X-RateLimit-Remaining:
          description: Number of requests remaining in current window
          schema:
            type: integer
        X-RateLimit-Reset:
          description: Time when the rate limit resets (Unix timestamp)
          schema:
            type: integer
        Retry-After:
          description: Number of seconds to wait before retrying
          schema:
            type: integer
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error:
              code: "RATE_LIMIT_EXCEEDED"
              message: "Too many requests. Please try again later."
              details:
                limit: 100
                window: "1 minute"
                retry_after: 45
              timestamp: "2025-01-15T14:30:45Z"

    InternalError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error:
              code: "INTERNAL_ERROR"
              message: "An internal server error occurred"
              timestamp: "2025-01-15T14:30:45Z"

tags:
  - name: Detection
    description: AI text detection operations
  - name: System
    description: System health and monitoring
  - name: Configuration
    description: API configuration management

externalDocs:
  description: Find more info about AI Detector
  url: https://github.com/kevinnbass/ai_detector